/*

Even Fibonacci numbers
Problem 2 
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.

*/

#include <iostream>
#include <vector>

using std::cout;
using std::vector;

int main(){

	vector <int> nums;
	vector <int> fibNums;
	int evenSum=0;

	for(int i=1; i<=4000000;++i){

		nums.push_back(i);
	}

	for(unsigned int i=1; i<nums.size(); ++i){

		nums[i+1]=nums[i]+nums[i-1];

		fibNums.push_back(nums[i]);

		if(nums[i]>=4000000){

			break;
		}

	}

	fibNums.pop_back();

	for(unsigned int i=0; i<fibNums.size(); ++i){

		if(fibNums[i]%2==0){

			evenSum+=fibNums[i];
		}
	}

	cout<<evenSum<<"\n";

	return 0;
}
